[{"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/index.js":"1","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/App.js":"2","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/reportWebVitals.js":"3","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/login.js":"4","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js":"5","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/cart.js":"6","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js":"7","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js":"8","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/options.js":"9","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/createRecipe.js":"10","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-db.js":"11","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-edamam.js":"12","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/user.js":"13"},{"size":591,"mtime":1630122525279,"results":"14","hashOfConfig":"15"},{"size":2723,"mtime":1630399122843,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1630119823524,"results":"17","hashOfConfig":"15"},{"size":1251,"mtime":1630469511275,"results":"18","hashOfConfig":"15"},{"size":6800,"mtime":1630466951689,"results":"19","hashOfConfig":"15"},{"size":4811,"mtime":1630645885949,"results":"20","hashOfConfig":"15"},{"size":2068,"mtime":1630368533225,"results":"21","hashOfConfig":"15"},{"size":2904,"mtime":1630368674427,"results":"22","hashOfConfig":"15"},{"size":1160,"mtime":1630355487539,"results":"23","hashOfConfig":"15"},{"size":212,"mtime":1630467234478,"results":"24","hashOfConfig":"15"},{"size":163,"mtime":1630475515454,"results":"25","hashOfConfig":"15"},{"size":174,"mtime":1630466947785,"results":"26","hashOfConfig":"15"},{"size":752,"mtime":1630641221725,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"lxccvs",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/index.js",[],["59","60"],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/App.js",["61"],"import React, { useState } from 'react'\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Cart from './components/cart';\nimport Login from './components/login';\nimport RecipeList from './components/recipe-list';\nimport Recipe from './components/recipe';\nimport CreateRecipe from './components/createRecipe';\n\nfunction App() {\n\n  const [user, setUser] = useState(null);\n\n  const login = (user=null) => {\n    setUser(user);\n  }\n\n  const logout = () => {\n    setUser(null);\n  }\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n        <a href=\"/\" className=\"navbar-brand\" style={{marginLeft: '1rem'}}>\n          Make A Dish\n        </a>\n        <div className=\"navbar-expand navbar-dark bg-dark\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to={\"/recipes\"} className=\"nav-link\">\n                Recipes\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={user ? `/${user.name}/cart` : '/login'} className=\"nav-link\">\n                Cart\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={user ? `/${user.name}/recipe` : '/login'} className=\"nav-link\">\n                Create Recipe\n              </Link>\n            </li>\n\n            <li className=\"nav-item\" >\n              { user ? (\n              <a onClick={logout} className=\"nav-link\" style={{cursor:'pointer'}}>\n                Logout {user.name}\n              </a>\n            ) : (            \n            <Link to={\"/login\"} className=\"nav-link\">\n              Login\n            </Link>\n            )}\n            </li>\n            <li className=\"nav-item position-absolute end-0\" id=\"edamam-badge\" data-color=\"black\">\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <div className=\"container mt-3\">\n        <Switch>\n          <Route exact path={[\"/\", \"/recipes\"]} component={RecipeList} />\n          <Route \n            path=\"/:id/cart\"\n            render={(props) => (\n              <Cart {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/:id/recipe\"\n            render={(props) => (\n              <CreateRecipe {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/recipes/:id\"\n            render={(props) => (\n              <Recipe {...props} user={user} />\n            )}\n          />\n          <Route \n            path=\"/login\"\n            render={(props) => (\n              <Login {...props} login={login} />\n            )}\n          />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/reportWebVitals.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/login.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js",["62","63"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\nimport fetchData from \"../http-edamam\";\nimport { diet, health, cuisineType, mealType, dishType } from './options';\n \nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchMealType, setMealType] = useState('')\n  const [searchDishType, setSearchDishType] = useState('');\n  const [searchDiet, setDiet] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n\n  // Then, start on the cart, first making sure that only logged users can access their cart.\n  \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  }\n\n  const onChangeCuisine = (e, newVal) => {\n    setCuisine(newVal);\n  }\n\n  const onChangeMealType = (e, newVal) => {\n    setMealType(newVal);\n  }\n\n  const onChangeDishType = (e, newVal) => {\n    setSearchDishType(newVal);\n  }\n\n  const onChangeDiet = (e , newVal)=> {\n    setDiet(newVal);\n  }\n\n  const onChangeHealthLabel = (e, newVal) => {\n    setHealthLabel(newVal);\n  }\n\n  const queryData = async () => {\n    let url;\n\n    url = DataServiceAppend.getFood(searchFood)\n    \n    url = DataServiceAppend.getCuisine(cuisine);\n\n    url = DataServiceAppend.getMealType(searchMealType);\n\n    url = DataServiceAppend.getDishType(searchDishType);\n\n    url = DataServiceAppend.getDiet(searchDiet);\n\n    url = DataServiceAppend.getHealth(healthLabel);\n    console.log(url)\n    const data = await fetchData(url);\n    setRecipes(data.map(x => x['recipe']))\n  }\n\n  const extractRecipeURI = (uri) => {\n    // From https://dev.to/benjaminadk/parse-user-input-for-urls-timestamps--hashtags-3dh4\n    \n    const matches = uri.match(/(?:\\s|^)?#[A-Za-z0-9\\-\\.\\_]+(?:\\s|$)/g);\n    return matches[0].slice(1);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"row pb-1\">\n        <div className=\"col-lg-6\">\n          <div>Food</div>\n          <TextField style={{marginTop: 10}} fullWidth={true} size=\"small\" variant=\"outlined\" placeholder=\"Search for food e.g. chicken\" value={searchFood} onChange={onChangeSearchFood}/>\n        </div>\n        <div className=\"col-lg-6\" >\n          <div>Cuisine</div>\n          <Autocomplete\n          \n          options={cuisineType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search cuisines\" variant=\"outlined\" />}\n          value={cuisine}\n          onChange={onChangeCuisine}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Meal Type</div>\n          <Autocomplete\n          \n          options={mealType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search meal types\" variant=\"outlined\" />}\n          value={searchMealType}\n          onChange={onChangeMealType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Dish Type</div>\n          <Autocomplete\n          \n          options={dishType}\n          size=\"small\"\n          style={{ marginTop: 10 }}\n          renderInput={(params) => <TextField {...params} label=\"Type to search dish types\" variant=\"outlined\" />}\n          value={searchDishType}\n          onChange={onChangeDishType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Diet Type</div>\n          <Autocomplete\n          \n          options={diet.map(type => {\n            type = type.replace('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search diet types\" variant=\"outlined\" />}\n          value={searchDiet}\n          onChange={onChangeDiet}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Health Labels</div>\n          <Autocomplete\n          \n          options={health.map(type => {\n            type = type.replaceAll('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search health labels\" variant=\"outlined\" />}\n          value={healthLabel}\n          onChange={onChangeHealthLabel}\n          />\n        </div>  \n        <div className=\"d-grid gap-2\" style={{marginTop: 20, marginBottom: 20}}>\n          <button className=\"btn btn-success btn-lg\" type=\"button\" onClick={queryData}>Search</button>\n        </div>     \n      </div>\n      <div className=\"row\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <img src={recipe['image']} className='card-img-top' alt={recipe['label']}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{recipe['label']}</h5>\n                  <p className=\"card-text\">\n                    <strong>Source: </strong>{recipe['source']}<br/>\n                    <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n                    <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n                    <strong>Ingredients: </strong><br/>\n                    <ul>\n                      {recipe['ingredientLines'].length > 8 ? (\n                        recipe['ingredientLines'].slice(0, 8).map((ingredient, i) => {\n                          if (i < 7) {\n                            return (\n                              <li key={i}>\n                                {ingredient}\n                              </li>\n                            )\n                          } else {\n                            return <li key={i}>\n                              <strong>... click below to show more</strong>\n                              </li>\n                          }\n                        })\n                      ) :\n                      recipe['ingredientLines'].map((ingredient, i) => {\n                        return (\n                          <li key={i}>\n                            {ingredient}\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </p>\n                  <a href={`/recipes/${extractRecipeURI(recipe['uri'])}`} class=\"btn btn-primary\">Show more</a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/cart.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js",["64"],"import React, { useEffect, useState } from 'react';\n\nfunction Recipe(props) {\n\n  const [recipe, setRecipe] = useState([]);\n\n\n  useEffect(() => {\n    const url = `https://api.edamam.com/api/recipes/v2/${props.match.params.id}?type=public&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`;\n    const getData = async () => {\n      const resp = await fetch(url);\n      const json = await resp.json()\n      setRecipe(json['recipe']);\n    }\n    getData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {recipe['label'] && (\n        <div>\n        <strong>{recipe['label']}</strong><nr/>\n        <img src={recipe['image']} className=\"img-fluid mx-auto d-block\" alt={recipe['label']}/>\n        <div className=\"mt-3\">\n          <div className=\"row d-flex justify-content-evenly\">\n            <div className=\"col\">\n              <strong>Source: </strong>{recipe['source']}<br/>\n              <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n              <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n              <strong>Diet Labels: </strong>{recipe['dietLabels'].join(', ')}<br/>\n              <strong>Meal Type: </strong>{recipe['mealType'].join(', ')}<br/>\n            </div>\n            <div className=\"col\">\n              <strong>Ingredients: </strong><br/>\n              <ul>\n                {recipe['ingredientLines'].map((ingredient, i) => {\n                  return (\n                    <li key={i}>\n                      {ingredient}\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n            <div className=\"col\">\n              <strong>Health Labels: </strong><br/>\n              <ul>\n                {recipe['healthLabels'].map((label, i) => {\n                  return (\n                    <li key={i}>\n                      {label}\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n    </div>)}\n    </div>\n  );\n}\n\nexport default Recipe;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/options.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/createRecipe.js",["65"],"import React from 'react'\nimport UserDataService from '../http-db';\n\nfunction CreateRecipe(props) {\n  return (\n    <div className=\"App\">\n      Hello Recipe Creator.\n    </div>\n  );\n}\n\nexport default CreateRecipe;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-db.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-edamam.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/user.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":49,"column":15,"nodeType":"72","endLine":49,"endColumn":83},{"ruleId":"73","severity":1,"message":"74","line":68,"column":54,"nodeType":"75","messageId":"76","endLine":68,"endColumn":55,"suggestions":"77"},{"ruleId":"73","severity":1,"message":"78","line":68,"column":56,"nodeType":"75","messageId":"76","endLine":68,"endColumn":57,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":16,"column":6,"nodeType":"82","endLine":16,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":2,"column":8,"nodeType":"86","messageId":"87","endLine":2,"endColumn":23},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["90","91"],"Unnecessary escape character: \\_.",["92","93"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.","ArrayExpression",["94"],"no-unused-vars","'UserDataService' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"messageId":"95","fix":"96","desc":"97"},{"messageId":"98","fix":"99","desc":"100"},{"messageId":"95","fix":"101","desc":"97"},{"messageId":"98","fix":"102","desc":"100"},{"desc":"103","fix":"104"},"removeEscape",{"range":"105","text":"106"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"107","text":"108"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"109","text":"106"},{"range":"110","text":"108"},"Update the dependencies array to be: [props.match.params.id]",{"range":"111","text":"112"},[1950,1951],"",[1950,1950],"\\",[1952,1953],[1952,1952],[486,488],"[props.match.params.id]"]