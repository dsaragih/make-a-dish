[{"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/index.js":"1","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/App.js":"2","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/reportWebVitals.js":"3","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/login.js":"4","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js":"5","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/cart.js":"6","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js":"7","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js":"8","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/options.js":"9","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/createRecipe.js":"10","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-db.js":"11","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-edamam.js":"12","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/user.js":"13","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/userRecipe.js":"14","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/editRecipe.js":"15"},{"size":591,"mtime":1630122525279,"results":"16","hashOfConfig":"17"},{"size":3192,"mtime":1631494925419,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":1630119823524,"results":"19","hashOfConfig":"17"},{"size":2491,"mtime":1631494710287,"results":"20","hashOfConfig":"17"},{"size":7215,"mtime":1631485565889,"results":"21","hashOfConfig":"17"},{"size":4835,"mtime":1631495013794,"results":"22","hashOfConfig":"17"},{"size":2068,"mtime":1631486300893,"results":"23","hashOfConfig":"17"},{"size":2904,"mtime":1630368674427,"results":"24","hashOfConfig":"17"},{"size":1160,"mtime":1630355487539,"results":"25","hashOfConfig":"17"},{"size":6007,"mtime":1631495013792,"results":"26","hashOfConfig":"17"},{"size":163,"mtime":1630475515454,"results":"27","hashOfConfig":"17"},{"size":166,"mtime":1631484409450,"results":"28","hashOfConfig":"17"},{"size":920,"mtime":1631488249908,"results":"29","hashOfConfig":"17"},{"size":758,"mtime":1631486508325,"results":"30","hashOfConfig":"17"},{"size":3445,"mtime":1631241743077,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"lxccvs",{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/index.js",[],["66","67"],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/App.js",["68"],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/reportWebVitals.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/login.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js",["69","70"],"import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\nimport fetchData from \"../http-edamam\";\nimport { diet, health, cuisineType, mealType, dishType } from './options';\n \nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchMealType, setMealType] = useState('')\n  const [searchDishType, setSearchDishType] = useState('');\n  const [searchDiet, setDiet] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [nextPage, setNextPage] = useState('');\n  \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  }\n\n  const onChangeCuisine = (e, newVal) => {\n    setCuisine(newVal);\n  }\n\n  const onChangeMealType = (e, newVal) => {\n    setMealType(newVal);\n  }\n\n  const onChangeDishType = (e, newVal) => {\n    setSearchDishType(newVal);\n  }\n\n  const onChangeDiet = (e , newVal)=> {\n    setDiet(newVal);\n  }\n\n  const onChangeHealthLabel = (e, newVal) => {\n    setHealthLabel(newVal);\n  }\n\n  const queryData = async () => {\n    let url;\n\n    url = DataServiceAppend.getFood(searchFood)\n    \n    url = DataServiceAppend.getCuisine(cuisine);\n\n    url = DataServiceAppend.getMealType(searchMealType);\n\n    url = DataServiceAppend.getDishType(searchDishType);\n\n    url = DataServiceAppend.getDiet(searchDiet);\n\n    url = DataServiceAppend.getHealth(healthLabel);\n    console.log(url)\n    const data = await fetchData(url);\n    setNextPage(data._links.next.href);\n    setRecipes(data['hits'].map(x => x['recipe']))\n  }\n\n  const getNextPage = async () => {\n    const data = await fetchData(nextPage);\n    setNextPage(data._links.next.href)\n    setRecipes(data['hits'].map(x => x['recipe']))\n  }\n\n  const extractRecipeURI = (uri) => {\n    // From https://dev.to/benjaminadk/parse-user-input-for-urls-timestamps--hashtags-3dh4\n    \n    const matches = uri.match(/(?:\\s|^)?#[A-Za-z0-9\\-\\.\\_]+(?:\\s|$)/g);\n    return matches[0].slice(1);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"row pb-1\">\n        <div className=\"col-lg-6\">\n          <div>Food</div>\n          <TextField style={{marginTop: 10}} fullWidth={true} size=\"small\" variant=\"outlined\" placeholder=\"Search for food e.g. chicken\" value={searchFood} onChange={onChangeSearchFood}/>\n        </div>\n        <div className=\"col-lg-6\" >\n          <div>Cuisine</div>\n          <Autocomplete\n          \n          options={cuisineType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search cuisines\" variant=\"outlined\" />}\n          value={cuisine}\n          onChange={onChangeCuisine}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Meal Type</div>\n          <Autocomplete\n          \n          options={mealType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search meal types\" variant=\"outlined\" />}\n          value={searchMealType}\n          onChange={onChangeMealType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Dish Type</div>\n          <Autocomplete\n          \n          options={dishType}\n          size=\"small\"\n          style={{ marginTop: 10 }}\n          renderInput={(params) => <TextField {...params} label=\"Type to search dish types\" variant=\"outlined\" />}\n          value={searchDishType}\n          onChange={onChangeDishType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Diet Type</div>\n          <Autocomplete\n          \n          options={diet.map(type => {\n            type = type.replace('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search diet types\" variant=\"outlined\" />}\n          value={searchDiet}\n          onChange={onChangeDiet}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Health Labels</div>\n          <Autocomplete\n          \n          options={health.map(type => {\n            type = type.replaceAll('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search health labels\" variant=\"outlined\" />}\n          value={healthLabel}\n          onChange={onChangeHealthLabel}\n          />\n        </div>  \n        <div className=\"d-grid gap-2\" style={{marginTop: 20, marginBottom: 20}}>\n          <button className=\"btn btn-success btn-lg\" type=\"button\" onClick={queryData}>Search</button>\n        </div>     \n      </div>\n      <div className=\"row\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <img src={recipe['image']} className='card-img-top' alt={recipe['label']}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{recipe['label']}</h5>\n                  <p className=\"card-text\">\n                    <strong>Source: </strong>{recipe['source']}<br/>\n                    <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n                    <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n                    <strong>Ingredients: </strong><br/>\n                    <ul>\n                      {recipe['ingredientLines'].length > 8 ? (\n                        recipe['ingredientLines'].slice(0, 8).map((ingredient, i) => {\n                          if (i < 7) {\n                            return (\n                              <li key={i}>\n                                {ingredient}\n                              </li>\n                            )\n                          } else {\n                            return <li key={i}>\n                              <strong>... click below to show more</strong>\n                              </li>\n                          }\n                        })\n                      ) :\n                      recipe['ingredientLines'].map((ingredient, i) => {\n                        return (\n                          <li key={i}>\n                            {ingredient}\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </p>\n                  <a href={`/recipes/${extractRecipeURI(recipe['uri'])}`} class=\"btn btn-primary\">Show more</a>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n        {Boolean(recipes.length) && (\n        <div class=\"d-grid gap-2 d-md-flex justify-content-md-end\">\n        <button className=\"btn btn-secondary me-md-2 mb-2\" onClick={getNextPage}>Next Page &rarr;</button>\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/cart.js",["71"],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js",["72"],"import React, { useEffect, useState } from 'react';\n\nfunction Recipe(props) {\n\n  const [recipe, setRecipe] = useState([]);\n\n\n  useEffect(() => {\n    const url = `https://api.edamam.com/api/recipes/v2/${props.match.params.id}?type=public&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`;\n    const getData = async () => {\n      const resp = await fetch(url);\n      const json = await resp.json()\n      setRecipe(json['recipe']);\n    }\n    getData();\n  }, [])\n\n  return (\n    <div className=\"App\">\n      {recipe['label'] && (\n        <div>\n        <strong>{recipe['label']}</strong><br/>\n        <img src={recipe['image']} className=\"img-fluid mx-auto d-block\" alt={recipe['label']}/>\n        <div className=\"mt-3\">\n          <div className=\"row d-flex justify-content-evenly\">\n            <div className=\"col\">\n              <strong>Source: </strong>{recipe['source']}<br/>\n              <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n              <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n              <strong>Diet Labels: </strong>{recipe['dietLabels'].join(', ')}<br/>\n              <strong>Meal Type: </strong>{recipe['mealType'].join(', ')}<br/>\n            </div>\n            <div className=\"col\">\n              <strong>Ingredients: </strong><br/>\n              <ul>\n                {recipe['ingredientLines'].map((ingredient, i) => {\n                  return (\n                    <li key={i}>\n                      {ingredient}\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n            <div className=\"col\">\n              <strong>Health Labels: </strong><br/>\n              <ul>\n                {recipe['healthLabels'].map((label, i) => {\n                  return (\n                    <li key={i}>\n                      {label}\n                    </li>\n                  )\n                })}\n              </ul>\n            </div>\n          </div>\n        </div>\n    </div>)}\n    </div>\n  );\n}\n\nexport default Recipe;","/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/options.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/createRecipe.js",["73","74"],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-db.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/http-edamam.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/user.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/userRecipe.js",[],"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/editRecipe.js",["75"],"import React, { useState } from 'react';\nimport UserDataService from '../services/user.js';\nimport { TextareaAutosize } from '@material-ui/core';\n\nfunction EditRecipe (props) {\n    const item = props.location.state.currentRecipe;\n    const [title, setTitle] = useState(item.title);\n    const [ingredients, setIngredients] = useState(item.ingredients);\n    const [instructions, setInstructions] = useState(item.instructions);\n    const [image, setImage] = useState(item.image);\n\n    const handleEditRecipe = () => {\n        const data = {\n            recipe_id: item._id,\n            title: title,\n            user_id: props.user.id,\n            ingredients: ingredients,\n            instructions: instructions,\n            image: image\n        }\n        \n        setTitle('');\n        setIngredients('')\n        setInstructions('')\n        setImage(null);\n    \n        UserDataService.updateRecipe(data)\n        .then(res => {\n          console.log(res.data);\n          props.history.push(`/${props.user.name}/recipe`);\n        })\n        .catch(e => {\n          console.error(e);\n        })\n    }\n\n    return (\n        <div className=\"row\">\n            <div className=\"col-lg-4 pb-1\">\n            <div className=\"card\">\n                <img src={image} width='600' height='300' className='card-img-top' alt={title}/>\n                <div className=\"card-body\">\n                <h5 className=\"card-title\">{title}</h5>\n                <p className=\"card-text\" style={{whiteSpace: 'pre-line'}}>\n                    <strong>Ingredients: </strong><br/>\n                    {ingredients}\n                </p>\n                <p className=\"card-text\" style={{whiteSpace: 'pre-line'}}>\n                    <strong>Instructions: </strong><br/>\n                    {instructions}\n                </p>\n                </div>\n            </div>\n            </div>\n            <div className=\"col-lg-8\">\n              <div className=\"col\">\n                <strong>Edit Recipe Title</strong><br/>\n                <TextareaAutosize aria-label=\"minimum height\" style={{width: '100%'}} minRows={3} placeholder=\"Recipe Title\" value={title} onChange={(e) => setTitle(e.target.value)}/>\n              </div>\n              <div className=\"col\">\n                <strong>Edit Recipe Ingredients</strong><br/>\n                <TextareaAutosize aria-label=\"minimum height\" style={{width: '100%'}} minRows={3} placeholder=\"Recipe Ingredients\" value={ingredients} onChange={(e) => setIngredients(e.target.value)}/>\n              </div>\n              <div className=\"col\">\n                <strong>Edit Recipe Instructions</strong><br/>\n                <TextareaAutosize aria-label=\"minimum height\" style={{width: '100%'}} minRows={3} placeholder=\"Recipe Instructions\" value={instructions} onChange={(e) => setInstructions(e.target.value)}/>\n              </div>\n              <div className=\"col\">\n                <strong>Upload New Image (2:1)</strong>\n                <p><input type=\"file\"  accept=\"image/*\" name=\"image\" id=\"file\"  onChange={(event) => setImage(URL.createObjectURL(event.target.files[0]))} text=\"upload\"/></p>\n                <p><img id=\"output\" width=\"200\" src={image}/></p>\n              </div>\n              <div className=\"d-grid gap-2\">\n                <button className=\"btn btn-success mt-3\" type=\"button\" onClick={handleEditRecipe}>Confirm Edits</button>\n              </div>\n            </div>\n        </div>\n    )\n}\n\nexport default EditRecipe;",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":51,"column":15,"nodeType":"82","endLine":51,"endColumn":83},{"ruleId":"83","severity":1,"message":"84","line":74,"column":54,"nodeType":"85","messageId":"86","endLine":74,"endColumn":55,"suggestions":"87"},{"ruleId":"83","severity":1,"message":"88","line":74,"column":56,"nodeType":"85","messageId":"86","endLine":74,"endColumn":57,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":30,"column":6,"nodeType":"92","endLine":30,"endColumn":8,"suggestions":"93"},{"ruleId":"90","severity":1,"message":"94","line":16,"column":6,"nodeType":"92","endLine":16,"endColumn":8,"suggestions":"95"},{"ruleId":"90","severity":1,"message":"96","line":33,"column":6,"nodeType":"92","endLine":33,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":139,"column":20,"nodeType":"82","endLine":139,"endColumn":65},{"ruleId":"98","severity":1,"message":"99","line":71,"column":20,"nodeType":"82","endLine":71,"endColumn":62},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["102","103"],"Unnecessary escape character: \\_.",["104","105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCart'. Either include it or remove the dependency array.","ArrayExpression",["106"],"React Hook useEffect has a missing dependency: 'props.match.params.id'. Either include it or remove the dependency array.",["107"],"React Hook useEffect has a missing dependency: 'getRecipeList'. Either include it or remove the dependency array.",["108"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"messageId":"109","fix":"110","desc":"111"},{"messageId":"112","fix":"113","desc":"114"},{"messageId":"109","fix":"115","desc":"111"},{"messageId":"112","fix":"116","desc":"114"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"removeEscape",{"range":"123","text":"124"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"125","text":"126"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"127","text":"124"},{"range":"128","text":"126"},"Update the dependencies array to be: [getCart]",{"range":"129","text":"130"},"Update the dependencies array to be: [props.match.params.id]",{"range":"131","text":"132"},"Update the dependencies array to be: [getRecipeList]",{"range":"133","text":"134"},[2126,2127],"",[2126,2126],"\\",[2128,2129],[2128,2128],[654,656],"[getCart]",[486,488],"[props.match.params.id]",[861,863],"[getRecipeList]"]