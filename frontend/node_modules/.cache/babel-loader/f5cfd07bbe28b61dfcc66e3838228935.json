{"ast":null,"code":"var _jsxFileName = \"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\nimport fetchData from \"../http-edamam\";\nimport { diet, health, cuisineType, mealType, dishType } from './options';\nimport { useScrollTrigger } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchMealType, setMealType] = useState('');\n  const [searchDishType, setSearchDishType] = useState('');\n  const [searchDiet, setDiet] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [nextPage, setNextPage] = useState(''); // Then, start on the cart, first making sure that only logged users can access their cart.\n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  };\n\n  const onChangeCuisine = (e, newVal) => {\n    setCuisine(newVal);\n  };\n\n  const onChangeMealType = (e, newVal) => {\n    setMealType(newVal);\n  };\n\n  const onChangeDishType = (e, newVal) => {\n    setSearchDishType(newVal);\n  };\n\n  const onChangeDiet = (e, newVal) => {\n    setDiet(newVal);\n  };\n\n  const onChangeHealthLabel = (e, newVal) => {\n    setHealthLabel(newVal);\n  };\n\n  const queryData = async () => {\n    let url;\n    url = DataServiceAppend.getFood(searchFood);\n    url = DataServiceAppend.getCuisine(cuisine);\n    url = DataServiceAppend.getMealType(searchMealType);\n    url = DataServiceAppend.getDishType(searchDishType);\n    url = DataServiceAppend.getDiet(searchDiet);\n    url = DataServiceAppend.getHealth(healthLabel);\n    console.log(url);\n    const data = await fetchData(url);\n    setNextPage(data._links.next.href);\n    setRecipes(data.map(x => x['hits']['recipe']));\n  };\n\n  const getNextPage = async () => {\n    const data = fetchData(nextPage);\n    setRecipes(data['hits'].map(x => x['recipe']));\n  };\n\n  const extractRecipeURI = uri => {\n    // From https://dev.to/benjaminadk/parse-user-input-for-urls-timestamps--hashtags-3dh4\n    const matches = uri.match(/(?:\\s|^)?#[A-Za-z0-9\\-\\.\\_]+(?:\\s|$)/g);\n    return matches[0].slice(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginTop: 10\n          },\n          fullWidth: true,\n          size: \"small\",\n          variant: \"outlined\",\n          placeholder: \"Search for food e.g. chicken\",\n          value: searchFood,\n          onChange: onChangeSearchFood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cuisine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: cuisineType,\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search cuisines\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 36\n          }, this),\n          value: cuisine,\n          onChange: onChangeCuisine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Meal Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: mealType,\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search meal types\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 36\n          }, this),\n          value: searchMealType,\n          onChange: onChangeMealType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Dish Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: dishType,\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search dish types\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 36\n          }, this),\n          value: searchDishType,\n          onChange: onChangeDishType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Diet Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: diet.map(type => {\n            type = type.replace('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          }),\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search diet types\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 36\n          }, this),\n          value: searchDiet,\n          onChange: onChangeDiet\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Health Labels\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          options: health.map(type => {\n            type = type.replaceAll('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          }),\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search health labels\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 36\n          }, this),\n          value: healthLabel,\n          onChange: onChangeHealthLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-grid gap-2\",\n        style: {\n          marginTop: 20,\n          marginBottom: 20\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success btn-lg\",\n          type: \"button\",\n          onClick: queryData,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe['image'],\n              className: \"card-img-top\",\n              alt: recipe['label']\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: recipe['label']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Source: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 21\n                }, this), recipe['source'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Calories (kcal): \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), Math.floor(recipe['calories']), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 87\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dish Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this), recipe['dishType'].join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 80\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: recipe['ingredientLines'].length > 8 ? recipe['ingredientLines'].slice(0, 8).map((ingredient, i) => {\n                    if (i < 7) {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: ingredient\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 31\n                      }, this);\n                    } else {\n                      return /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                          children: \"... click below to show more\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 31\n                        }, this)\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 180,\n                        columnNumber: 36\n                      }, this);\n                    }\n                  }) : recipe['ingredientLines'].map((ingredient, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/recipes/${extractRecipeURI(recipe['uri'])}`,\n                class: \"btn btn-primary\",\n                children: \"Show more\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            class: \"btn btn-primary\",\n            children: \">> Next Page\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"rFYInvYspKPZaYo3iBF/t1gqS0M=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js"],"names":["React","useState","TextField","Autocomplete","DataServiceAppend","fetchData","diet","health","cuisineType","mealType","dishType","useScrollTrigger","RecipeList","recipes","setRecipes","searchFood","setSearchFood","cuisine","setCuisine","searchMealType","setMealType","searchDishType","setSearchDishType","searchDiet","setDiet","healthLabel","setHealthLabel","nextPage","setNextPage","onChangeSearchFood","e","target","value","onChangeCuisine","newVal","onChangeMealType","onChangeDishType","onChangeDiet","onChangeHealthLabel","queryData","url","getFood","getCuisine","getMealType","getDishType","getDiet","getHealth","console","log","data","_links","next","href","map","x","getNextPage","extractRecipeURI","uri","matches","match","slice","marginTop","params","type","replace","charAt","toUpperCase","replaceAll","marginBottom","recipe","Math","floor","join","length","ingredient","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\nimport fetchData from \"../http-edamam\";\nimport { diet, health, cuisineType, mealType, dishType } from './options';\nimport { useScrollTrigger } from '@material-ui/core';\n \nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchMealType, setMealType] = useState('')\n  const [searchDishType, setSearchDishType] = useState('');\n  const [searchDiet, setDiet] = useState('');\n  const [healthLabel, setHealthLabel] = useState('');\n  const [nextPage, setNextPage] = useState('');\n\n  // Then, start on the cart, first making sure that only logged users can access their cart.\n  \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  }\n\n  const onChangeCuisine = (e, newVal) => {\n    setCuisine(newVal);\n  }\n\n  const onChangeMealType = (e, newVal) => {\n    setMealType(newVal);\n  }\n\n  const onChangeDishType = (e, newVal) => {\n    setSearchDishType(newVal);\n  }\n\n  const onChangeDiet = (e , newVal)=> {\n    setDiet(newVal);\n  }\n\n  const onChangeHealthLabel = (e, newVal) => {\n    setHealthLabel(newVal);\n  }\n\n  const queryData = async () => {\n    let url;\n\n    url = DataServiceAppend.getFood(searchFood)\n    \n    url = DataServiceAppend.getCuisine(cuisine);\n\n    url = DataServiceAppend.getMealType(searchMealType);\n\n    url = DataServiceAppend.getDishType(searchDishType);\n\n    url = DataServiceAppend.getDiet(searchDiet);\n\n    url = DataServiceAppend.getHealth(healthLabel);\n    console.log(url)\n    const data = await fetchData(url);\n    setNextPage(data._links.next.href);\n    setRecipes(data.map(x => x['hits']['recipe']))\n  }\n\n  const getNextPage = async () => {\n    const data = fetchData(nextPage);\n    setRecipes(data['hits'].map(x => x['recipe']))\n  }\n\n  const extractRecipeURI = (uri) => {\n    // From https://dev.to/benjaminadk/parse-user-input-for-urls-timestamps--hashtags-3dh4\n    \n    const matches = uri.match(/(?:\\s|^)?#[A-Za-z0-9\\-\\.\\_]+(?:\\s|$)/g);\n    return matches[0].slice(1);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"row pb-1\">\n        <div className=\"col-lg-6\">\n          <div>Food</div>\n          <TextField style={{marginTop: 10}} fullWidth={true} size=\"small\" variant=\"outlined\" placeholder=\"Search for food e.g. chicken\" value={searchFood} onChange={onChangeSearchFood}/>\n        </div>\n        <div className=\"col-lg-6\" >\n          <div>Cuisine</div>\n          <Autocomplete\n          \n          options={cuisineType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search cuisines\" variant=\"outlined\" />}\n          value={cuisine}\n          onChange={onChangeCuisine}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Meal Type</div>\n          <Autocomplete\n          \n          options={mealType}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search meal types\" variant=\"outlined\" />}\n          value={searchMealType}\n          onChange={onChangeMealType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Dish Type</div>\n          <Autocomplete\n          \n          options={dishType}\n          size=\"small\"\n          style={{ marginTop: 10 }}\n          renderInput={(params) => <TextField {...params} label=\"Type to search dish types\" variant=\"outlined\" />}\n          value={searchDishType}\n          onChange={onChangeDishType}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Diet Type</div>\n          <Autocomplete\n          \n          options={diet.map(type => {\n            type = type.replace('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search diet types\" variant=\"outlined\" />}\n          value={searchDiet}\n          onChange={onChangeDiet}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Health Labels</div>\n          <Autocomplete\n          \n          options={health.map(type => {\n            type = type.replaceAll('-', ' ');\n            return type.charAt(0).toUpperCase() + type.slice(1);\n          })}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search health labels\" variant=\"outlined\" />}\n          value={healthLabel}\n          onChange={onChangeHealthLabel}\n          />\n        </div>  \n        <div className=\"d-grid gap-2\" style={{marginTop: 20, marginBottom: 20}}>\n          <button className=\"btn btn-success btn-lg\" type=\"button\" onClick={queryData}>Search</button>\n        </div>     \n      </div>\n      <div className=\"row\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <img src={recipe['image']} className='card-img-top' alt={recipe['label']}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{recipe['label']}</h5>\n                  <p className=\"card-text\">\n                    <strong>Source: </strong>{recipe['source']}<br/>\n                    <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n                    <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n                    <strong>Ingredients: </strong><br/>\n                    <ul>\n                      {recipe['ingredientLines'].length > 8 ? (\n                        recipe['ingredientLines'].slice(0, 8).map((ingredient, i) => {\n                          if (i < 7) {\n                            return (\n                              <li key={i}>\n                                {ingredient}\n                              </li>\n                            )\n                          } else {\n                            return <li key={i}>\n                              <strong>... click below to show more</strong>\n                              </li>\n                          }\n                        })\n                      ) :\n                      recipe['ingredientLines'].map((ingredient, i) => {\n                        return (\n                          <li key={i}>\n                            {ingredient}\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </p>\n                  <a href={`/recipes/${extractRecipeURI(recipe['uri'])}`} class=\"btn btn-primary\">Show more</a>\n                </div>\n              </div>\n              <button class=\"btn btn-primary\">>> Next Page</button>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}