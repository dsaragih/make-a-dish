{"ast":null,"code":"var _jsxFileName = \"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport fetchData from '../http-common';\nimport DataServiceAppend from '../services/recipes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState(['All Cuisines']);\n  const [searchDishType, setSearchDishType] = useState('All Types'); // useEffect(() => {\n  //   async function call () {\n  //     const recs = await fetchData('rice');\n  //     const lst = recs.map(e => e['recipe']);\n  //     setRecipes(lst);\n  //   }\n  //   call();\n  // }, []); \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  };\n\n  const findByFood = async () => {\n    const data = await DataServiceAppend.getFood(searchFood);\n    const list = data.map(food => food['recipe']);\n    setRecipes(list);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group col-lg-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"Search by name\",\n          value: searchFood,\n          onChange: onChangeSearchFood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group-append\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-outline-secondary\",\n            type: \"button\",\n            onClick: findByFood,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"cuisineInput\",\n        class: \"form-label\",\n        children: \"Datalist example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        class: \"input-group col-lg-4\",\n        list: \"datalistOptions\",\n        id: \"cuisineInput\",\n        placeholder: \"Type to search cuisines...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n        id: \"cuisineOptions\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"San Francisco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"New York\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Seattle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Los Angeles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Chicago\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-outline-secondary\",\n          type: \"button\",\n          onClick: findByFood,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe['image'],\n              className: \"card-img-top\",\n              alt: `Image of ${recipe['label']}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: recipe['label']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Source: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this), recipe['source'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Calories: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), Math.floor(recipe['calories']), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 80\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dish Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this), recipe['dishType'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: recipe['ingredientLines'].map((ingredient, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"WYk4YBG9TCme5XkeTPHZHpQzQVQ=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js"],"names":["React","useState","fetchData","DataServiceAppend","RecipeList","recipes","setRecipes","searchFood","setSearchFood","cuisine","setCuisine","searchDishType","setSearchDishType","onChangeSearchFood","e","target","value","findByFood","data","getFood","list","map","food","recipe","Math","floor","ingredient","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport fetchData from '../http-common';\nimport DataServiceAppend from '../services/recipes';\n\nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState(['All Cuisines']);\n  const [searchDishType, setSearchDishType] = useState('All Types');\n\n  // useEffect(() => {\n  //   async function call () {\n  //     const recs = await fetchData('rice');\n  //     const lst = recs.map(e => e['recipe']);\n  //     setRecipes(lst);\n  //   }\n  //   call();\n  // }, []); \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  }\n\n  const findByFood = async () => {\n    const data = await DataServiceAppend.getFood(searchFood);\n    const list = data.map(food => food['recipe']);\n    setRecipes(list);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"row pb-1\">\n        <div className=\"input-group col-lg-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by name\"\n            value={searchFood}\n            onChange={onChangeSearchFood}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByFood}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n        <label for=\"cuisineInput\" class=\"form-label\">Datalist example</label>\n        <input class=\"input-group col-lg-4\" list=\"datalistOptions\" id=\"cuisineInput\" placeholder=\"Type to search cuisines...\"/>\n        <datalist id=\"cuisineOptions\">\n          <option value=\"San Francisco\"/>\n          <option value=\"New York\"/>\n          <option value=\"Seattle\"/>\n          <option value=\"Los Angeles\"/>\n          <option value=\"Chicago\"/>\n        </datalist>\n        <div className=\"input-group-append\">\n          <button\n            className=\"btn btn-outline-secondary\"\n            type=\"button\"\n            onClick={findByFood}\n          >\n            Search\n          </button>\n        </div>\n      </div>\n      <div className=\"row\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <img src={recipe['image']} className='card-img-top' alt={`Image of ${recipe['label']}`}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{recipe['label']}</h5>\n                  <p className=\"card-text\">\n                    <strong>Source: </strong>{recipe['source']}<br/>\n                    <strong>Calories: </strong>{Math.floor(recipe['calories'])}<br/>\n                    <strong>Dish Type: </strong>{recipe['dishType']}<br/>\n                    <strong>Ingredients: </strong><br/>\n                    <ul>\n                      {recipe['ingredientLines'].map((ingredient, i) => {\n                        return (\n                          <li key={i}>\n                            {ingredient}\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}