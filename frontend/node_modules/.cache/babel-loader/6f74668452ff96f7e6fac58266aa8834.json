{"ast":null,"code":"var _jsxFileName = \"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RecipeList() {\n  _s();\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchDishType, setSearchDishType] = useState('All Types'); // useEffect(() => {\n  //   async function call () {\n  //     const recs = await fetchData('rice');\n  //     const lst = recs.map(e => e['recipe']);\n  //     setRecipes(lst);\n  //   }\n  //   call();\n  // }, []); \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  };\n\n  const findByFood = async () => {\n    const data = await DataServiceAppend.getFood(searchFood);\n    const list = data.map(food => food['recipe']);\n    setRecipes(list);\n  };\n\n  const onChangeCuisine = e => {\n    const cuisine = e.target.value;\n    setCuisine(cuisine);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row pb-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            marginTop: 10\n          },\n          fullWidth: \"true\",\n          size: \"small\",\n          variant: \"outlined\",\n          placeholder: \"Search for food e.g. chicken\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Cuisine\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: ['ostion1', 'option2'],\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search cuisines\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 36\n          }, this),\n          inputValue: cuisine,\n          onInputChange: onChangeCuisine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Meal Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: ['ostion1', 'option2'],\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search meal types\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 36\n          }, this),\n          inputValue: cuisine,\n          onInputChange: onChangeCuisine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Dish Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"combo-box-demo\",\n          options: ['ostion1', 'option2'],\n          size: \"small\",\n          style: {\n            marginTop: 10\n          },\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n            label: \"Type to search dish types\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 36\n          }, this),\n          inputValue: cuisine,\n          onInputChange: onChangeCuisine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: recipes.map(recipe => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-4 pb-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe['image'],\n              className: \"card-img-top\",\n              alt: `Image of ${recipe['label']}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-body\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"card-title\",\n                children: recipe['label']\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"card-text\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Source: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), recipe['source'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 64\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Calories: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this), Math.floor(recipe['calories']), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 80\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Dish Type: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 21\n                }, this), recipe['dishType'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 69\n                }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Ingredients: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 51\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: recipe['ingredientLines'].map((ingredient, i) => {\n                    return /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: ingredient\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 27\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipeList, \"8T+kEdBpVUh7BF0xrNgj4SykTVs=\");\n\n_c = RecipeList;\nexport default RecipeList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeList\");","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe-list.js"],"names":["React","useState","TextField","Autocomplete","DataServiceAppend","RecipeList","recipes","setRecipes","searchFood","setSearchFood","cuisine","setCuisine","searchDishType","setSearchDishType","onChangeSearchFood","e","target","value","findByFood","data","getFood","list","map","food","onChangeCuisine","marginTop","params","recipe","Math","floor","ingredient","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAEpB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,cAAD,EAAiBC,iBAAjB,IAAsCZ,QAAQ,CAAC,WAAD,CAApD,CALoB,CAOpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMa,kBAAkB,GAAGC,CAAC,IAAI;AAC9B,UAAMP,UAAU,GAAGO,CAAC,CAACC,MAAF,CAASC,KAA5B;AACAR,IAAAA,aAAa,CAACD,UAAD,CAAb;AACD,GAHD;;AAKA,QAAMU,UAAU,GAAG,YAAY;AAC7B,UAAMC,IAAI,GAAG,MAAMf,iBAAiB,CAACgB,OAAlB,CAA0BZ,UAA1B,CAAnB;AACA,UAAMa,IAAI,GAAGF,IAAI,CAACG,GAAL,CAASC,IAAI,IAAIA,IAAI,CAAC,QAAD,CAArB,CAAb;AACAhB,IAAAA,UAAU,CAACc,IAAD,CAAV;AACD,GAJD;;AAMA,QAAMG,eAAe,GAAGT,CAAC,IAAI;AAC3B,UAAML,OAAO,GAAGK,CAAC,CAACC,MAAF,CAASC,KAAzB;AACAN,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAHD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAACe,YAAAA,SAAS,EAAE;AAAZ,WAAlB;AAAmC,UAAA,SAAS,EAAC,MAA7C;AAAoD,UAAA,IAAI,EAAC,OAAzD;AAAiE,UAAA,OAAO,EAAC,UAAzE;AAAoF,UAAA,WAAW,EAAC;AAAhG;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACA,UAAA,EAAE,EAAC,gBADH;AAEA,UAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFT;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,KAAK,EAAE;AAAEA,YAAAA,SAAS,EAAE;AAAb,WAJP;AAKA,UAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC,yBAA7B;AAAuD,YAAA,OAAO,EAAC;AAA/D;AAAA;AAAA;AAAA;AAAA,kBALzB;AAMA,UAAA,UAAU,EAAEhB,OANZ;AAOA,UAAA,aAAa,EAAEc;AAPf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAmBE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACA,UAAA,EAAE,EAAC,gBADH;AAEA,UAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFT;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAJP;AAKA,UAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC,2BAA7B;AAAyD,YAAA,OAAO,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,kBALzB;AAMA,UAAA,UAAU,EAAEhB,OANZ;AAOA,UAAA,aAAa,EAAEc;AAPf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF,eA+BE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AACA,UAAA,EAAE,EAAC,gBADH;AAEA,UAAA,OAAO,EAAE,CAAC,SAAD,EAAY,SAAZ,CAFT;AAGA,UAAA,IAAI,EAAC,OAHL;AAIA,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAJP;AAKA,UAAA,WAAW,EAAGC,MAAD,iBAAY,QAAC,SAAD,OAAeA,MAAf;AAAuB,YAAA,KAAK,EAAC,2BAA7B;AAAyD,YAAA,OAAO,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA,kBALzB;AAMA,UAAA,UAAU,EAAEhB,OANZ;AAOA,UAAA,aAAa,EAAEc;AAPf;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eA8CE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACGlB,OAAO,CAACgB,GAAR,CAAaK,MAAD,IAAY;AACvB,4BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACE;AAAK,cAAA,GAAG,EAAEA,MAAM,CAAC,OAAD,CAAhB;AAA2B,cAAA,SAAS,EAAC,cAArC;AAAoD,cAAA,GAAG,EAAG,YAAWA,MAAM,CAAC,OAAD,CAAU;AAArF;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAK,cAAA,SAAS,EAAC,WAAf;AAAA,sCACE;AAAI,gBAAA,SAAS,EAAC,YAAd;AAAA,0BAA4BA,MAAM,CAAC,OAAD;AAAlC;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAG,gBAAA,SAAS,EAAC,WAAb;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAC4BA,MAAM,CAAC,QAAD,CADlC,eAC6C;AAAA;AAAA;AAAA;AAAA,wBAD7C,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAE8BC,IAAI,CAACC,KAAL,CAAWF,MAAM,CAAC,UAAD,CAAjB,CAF9B,eAE6D;AAAA;AAAA;AAAA;AAAA,wBAF7D,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,EAG+BA,MAAM,CAAC,UAAD,CAHrC,eAGkD;AAAA;AAAA;AAAA;AAAA,wBAHlD,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJF,eAIgC;AAAA;AAAA;AAAA;AAAA,wBAJhC,eAKE;AAAA,4BACGA,MAAM,CAAC,iBAAD,CAAN,CAA0BL,GAA1B,CAA8B,CAACQ,UAAD,EAAaC,CAAb,KAAmB;AAChD,wCACE;AAAA,gCACGD;AADH,uBAASC,CAAT;AAAA;AAAA;AAAA;AAAA,4BADF;AAKD,mBANA;AADH;AAAA;AAAA;AAAA;AAAA,wBALF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAyBD,OA1BA;AADH;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED;;GA/GQ1B,U;;KAAAA,U;AAiHT,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport DataServiceAppend from '../services/recipes';\n\nfunction RecipeList() {\n\n  const [recipes, setRecipes] = useState([]);\n  const [searchFood, setSearchFood] = useState('');\n  const [cuisine, setCuisine] = useState('');\n  const [searchDishType, setSearchDishType] = useState('All Types');\n\n  // useEffect(() => {\n  //   async function call () {\n  //     const recs = await fetchData('rice');\n  //     const lst = recs.map(e => e['recipe']);\n  //     setRecipes(lst);\n  //   }\n  //   call();\n  // }, []); \n\n  const onChangeSearchFood = e => {\n    const searchFood = e.target.value;\n    setSearchFood(searchFood);\n  }\n\n  const findByFood = async () => {\n    const data = await DataServiceAppend.getFood(searchFood);\n    const list = data.map(food => food['recipe']);\n    setRecipes(list);\n  }\n\n  const onChangeCuisine = e => {\n    const cuisine = e.target.value;\n    setCuisine(cuisine);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"row pb-1\">\n        <div className=\"col-lg-6\">\n          {/* <label for=\"foodSearch\" className=\"form-label\">Food</label>\n          <input type=\"text\" className=\"form-control\" id=\"foodSearch\" placeholder=\"Search for food e.g. chicken\"/> */}\n          <div>Food</div>\n          <TextField style={{marginTop: 10}} fullWidth=\"true\" size=\"small\" variant=\"outlined\" placeholder=\"Search for food e.g. chicken\"/>\n        </div>\n        <div className=\"col-lg-6\" >\n          <div>Cuisine</div>\n          <Autocomplete\n          id=\"combo-box-demo\"\n          options={['ostion1', 'option2']}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search cuisines\" variant=\"outlined\" />}\n          inputValue={cuisine}\n          onInputChange={onChangeCuisine}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Meal Type</div>\n          <Autocomplete\n          id=\"combo-box-demo\"\n          options={['ostion1', 'option2']}\n          size=\"small\"\n          style={{ marginTop: 10}}\n          renderInput={(params) => <TextField {...params} label=\"Type to search meal types\" variant=\"outlined\" />}\n          inputValue={cuisine}\n          onInputChange={onChangeCuisine}\n          />\n        </div>\n        <div className=\"col-lg-6\">\n          <div>Dish Type</div>\n          <Autocomplete\n          id=\"combo-box-demo\"\n          options={['ostion1', 'option2']}\n          size=\"small\"\n          style={{ marginTop: 10 }}\n          renderInput={(params) => <TextField {...params} label=\"Type to search dish types\" variant=\"outlined\" />}\n          inputValue={cuisine}\n          onInputChange={onChangeCuisine}\n          />\n        </div>\n        \n      </div>\n      <div className=\"row\">\n        {recipes.map((recipe) => {\n          return (\n            <div className=\"col-lg-4 pb-1\">\n              <div className=\"card\">\n                <img src={recipe['image']} className='card-img-top' alt={`Image of ${recipe['label']}`}/>\n                <div className=\"card-body\">\n                  <h5 className=\"card-title\">{recipe['label']}</h5>\n                  <p className=\"card-text\">\n                    <strong>Source: </strong>{recipe['source']}<br/>\n                    <strong>Calories: </strong>{Math.floor(recipe['calories'])}<br/>\n                    <strong>Dish Type: </strong>{recipe['dishType']}<br/>\n                    <strong>Ingredients: </strong><br/>\n                    <ul>\n                      {recipe['ingredientLines'].map((ingredient, i) => {\n                        return (\n                          <li key={i}>\n                            {ingredient}\n                          </li>\n                        )\n                      })}\n                    </ul>\n                  </p>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default RecipeList;"]},"metadata":{},"sourceType":"module"}