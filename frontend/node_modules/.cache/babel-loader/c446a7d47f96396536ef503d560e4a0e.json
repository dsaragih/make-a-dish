{"ast":null,"code":"const baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n  constructor() {\n    this.currentUrl = baseUrl;\n  }\n\n  getFood(food) {\n    food = encodeURI(food);\n\n    if (this.currentUrl.match(/q=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n    } else if (!food) {\n      this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&q=${food}`;\n    }\n\n    console.log(this.currentUrl);\n    return this.currentUrl;\n  }\n\n  getCuisine(cuisine) {\n    cuisine = encodeURI(cuisine);\n\n    if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n    } else if (!cuisine) {\n      this.currentUrl = this.currentUrl.replace(/&cuisineType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&cuisineType=${cuisine}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDishType(dishType) {\n    dishType;\n\n    if (this.currentUrl.match(/dishType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n    } else if (!dishType) {\n      this.currentUrl = this.currentUrl.replace(/&dishType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&dishType=${dishType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getMealType(mealType) {\n    if (this.currentUrl.match(/mealType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n    } else if (!mealType) {\n      this.currentUrl = this.currentUrl.replace(/&mealType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&mealType=${mealType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDiet(diet) {\n    if (this.currentUrl.match(/diet=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n    } else if (!diet) {\n      this.currentUrl = this.currentUrl.replace(/&diet=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&diet=${diet}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getHealth(health) {\n    if (this.currentUrl.match(/health=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n    } else if (!health) {\n      this.currentUrl = this.currentUrl.replace(/&health=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&health=${health}`;\n    }\n\n    return this.currentUrl;\n  }\n\n}\n\nexport default new DataServiceAppend();","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js"],"names":["baseUrl","process","env","REACT_APP_URL","DataServiceAppend","currentUrl","getFood","food","encodeURI","match","replace","console","log","getCuisine","cuisine","getDishType","dishType","getMealType","mealType","getDiet","diet","getHealth","health"],"mappings":"AACA,MAAMA,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;;AAEA,MAAMC,iBAAN,CAAwB;AAAA;AAAA,SACpBC,UADoB,GACPL,OADO;AAAA;;AAGpBM,EAAAA,OAAO,CAACC,IAAD,EAAO;AACVA,IAAAA,IAAI,GAAGC,SAAS,CAACD,IAAD,CAAhB;;AACA,QAAI,KAAKF,UAAL,CAAgBI,KAAhB,CAAsB,WAAtB,CAAJ,EAAwC;AACpC,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,WAAxB,EAAsC,KAAIH,IAAK,EAA/C,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,IAAL,EAAW;AACd,WAAKF,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,YAAxB,EAAsC,EAAtC,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,MAAKE,IAAK,EAA9B;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,UAAjB;AACA,WAAO,KAAKA,UAAZ;AACH;;AAEDQ,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChBA,IAAAA,OAAO,GAAGN,SAAS,CAACM,OAAD,CAAnB;;AACA,QAAI,KAAKT,UAAL,CAAgBI,KAAhB,CAAsB,qBAAtB,CAAJ,EAAkD;AAC9C,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,qBAAxB,EAAgD,eAAcI,OAAQ,EAAtE,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,OAAL,EAAc;AACjB,WAAKT,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,sBAAxB,EAAgD,EAAhD,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,gBAAeS,OAAQ,EAA3C;AACH;;AACD,WAAO,KAAKT,UAAZ;AACH;;AAEDU,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClBA,IAAAA,QAAQ;;AACR,QAAI,KAAKX,UAAL,CAAgBI,KAAhB,CAAsB,kBAAtB,CAAJ,EAA+C;AAC3C,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,kBAAxB,EAA6C,YAAWM,QAAS,EAAjE,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,QAAL,EAAe;AAClB,WAAKX,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,mBAAxB,EAA6C,EAA7C,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,aAAYW,QAAS,EAAzC;AACH;;AACD,WAAO,KAAKX,UAAZ;AACH;;AAEDY,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,QAAI,KAAKb,UAAL,CAAgBI,KAAhB,CAAsB,kBAAtB,CAAJ,EAA+C;AAC3C,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,kBAAxB,EAA6C,YAAWQ,QAAS,EAAjE,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,QAAL,EAAe;AAClB,WAAKb,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,mBAAxB,EAA6C,EAA7C,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,aAAYa,QAAS,EAAzC;AACH;;AACD,WAAO,KAAKb,UAAZ;AACH;;AAEDc,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,QAAI,KAAKf,UAAL,CAAgBI,KAAhB,CAAsB,cAAtB,CAAJ,EAA2C;AACvC,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,cAAxB,EAAyC,QAAOU,IAAK,EAArD,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,IAAL,EAAW;AACd,WAAKf,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,eAAxB,EAAyC,EAAzC,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,SAAQe,IAAK,EAAjC;AACH;;AACD,WAAO,KAAKf,UAAZ;AACH;;AAEDgB,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,QAAI,KAAKjB,UAAL,CAAgBI,KAAhB,CAAsB,gBAAtB,CAAJ,EAA6C;AACzC,WAAKJ,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,gBAAxB,EAA2C,UAASY,MAAO,EAA3D,CAAlB;AACH,KAFD,MAEO,IAAI,CAACA,MAAL,EAAa;AAChB,WAAKjB,UAAL,GAAkB,KAAKA,UAAL,CAAgBK,OAAhB,CAAwB,iBAAxB,EAA2C,EAA3C,CAAlB;AACH,KAFM,MAEA;AACH,WAAKL,UAAL,IAAoB,WAAUiB,MAAO,EAArC;AACH;;AACD,WAAO,KAAKjB,UAAZ;AACH;;AAvEmB;;AA0ExB,eAAe,IAAID,iBAAJ,EAAf","sourcesContent":["\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n    currentUrl = baseUrl;\n    \n    getFood(food) {\n        food = encodeURI(food);\n        if (this.currentUrl.match(/q=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n        } else if (!food) {\n            this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&q=${food}`;\n        }\n        console.log(this.currentUrl);\n        return this.currentUrl;\n    }\n\n    getCuisine(cuisine) {\n        cuisine = encodeURI(cuisine);\n        if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n        } else if (!cuisine) {\n            this.currentUrl = this.currentUrl.replace(/&cuisineType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&cuisineType=${cuisine}`;\n        }\n        return this.currentUrl;\n    }\n    \n    getDishType(dishType) {\n        dishType \n        if (this.currentUrl.match(/dishType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n        } else if (!dishType) {\n            this.currentUrl = this.currentUrl.replace(/&dishType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&dishType=${dishType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getMealType(mealType) {\n        if (this.currentUrl.match(/mealType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n        } else if (!mealType) {\n            this.currentUrl = this.currentUrl.replace(/&mealType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&mealType=${mealType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getDiet(diet) {\n        if (this.currentUrl.match(/diet=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n        } else if (!diet) {\n            this.currentUrl = this.currentUrl.replace(/&diet=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&diet=${diet}`;\n        }        \n        return this.currentUrl;\n    }\n\n    getHealth(health) {\n        if (this.currentUrl.match(/health=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n        } else if (!health) {\n            this.currentUrl = this.currentUrl.replace(/&health=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&health=${health}`;\n        }        \n        return this.currentUrl;\n    }\n}\n\nexport default new DataServiceAppend();"]},"metadata":{},"sourceType":"module"}