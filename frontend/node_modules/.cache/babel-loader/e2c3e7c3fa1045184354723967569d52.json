{"ast":null,"code":"const baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n  constructor() {\n    this.currentUrl = baseUrl;\n  }\n\n  getFood(food) {\n    if (this.currentUrl.match(/q=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n    } else if (!food) {\n      this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&q=${food}`;\n    }\n\n    console.log(this.currentUrl);\n    return this.currentUrl;\n  }\n\n  getCuisine(cuisine) {\n    if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n    } else if (!cuisine) {\n      this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&cuisineType=${cuisine}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDishType(dishType) {\n    if (this.currentUrl.match(/dishType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n    } else {\n      this.currentUrl += `&dishType=${dishType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getMealType(mealType) {\n    if (this.currentUrl.match(/mealType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n    } else {\n      this.currentUrl += `&mealType=${mealType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDiet(diet) {\n    if (this.currentUrl.match(/diet=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n    } else {\n      this.currentUrl += `&diet=${diet}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getHealth(health) {\n    if (this.currentUrl.match(/health=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n    } else {\n      this.currentUrl += `&health=${health}`;\n    }\n\n    return this.currentUrl;\n  }\n\n}\n\nexport default new DataServiceAppend();","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js"],"names":["baseUrl","process","env","REACT_APP_URL","DataServiceAppend","currentUrl","getFood","food","match","replace","console","log","getCuisine","cuisine","getDishType","dishType","getMealType","mealType","getDiet","diet","getHealth","health"],"mappings":"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","sourcesContent":["\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n    currentUrl = baseUrl;\n    \n    getFood(food) {\n        if (this.currentUrl.match(/q=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n        } else if (!food) {\n            this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&q=${food}`;\n        }\n        console.log(this.currentUrl);\n        return this.currentUrl;\n    }\n\n    getCuisine(cuisine) {\n        if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n        } else if (!cuisine) {\n            this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&cuisineType=${cuisine}`;\n        }\n        return this.currentUrl;\n    }\n    \n    getDishType(dishType) {\n        if (this.currentUrl.match(/dishType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n        } else {\n            this.currentUrl += `&dishType=${dishType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getMealType(mealType) {\n        if (this.currentUrl.match(/mealType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n        } else {\n            this.currentUrl += `&mealType=${mealType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getDiet(diet) {\n        if (this.currentUrl.match(/diet=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n        } else {\n            this.currentUrl += `&diet=${diet}`;\n        }        \n        return this.currentUrl;\n    }\n\n    getHealth(health) {\n        if (this.currentUrl.match(/health=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n        } else {\n            this.currentUrl += `&health=${health}`;\n        }        \n        return this.currentUrl;\n    }\n}\n\nexport default new DataServiceAppend();"]},"metadata":{},"sourceType":"module"}