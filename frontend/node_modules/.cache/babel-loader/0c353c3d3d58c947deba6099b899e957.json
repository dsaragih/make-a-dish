{"ast":null,"code":"import { dishType, health } from \"../components/options\";\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n  constructor() {\n    this.currentUrl = baseUrl;\n  }\n\n  getFood(food) {\n    food = food.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/q=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n    } else if (!food) {\n      this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&q=${food}`;\n    }\n\n    console.log(this.currentUrl);\n    return this.currentUrl;\n  }\n\n  getCuisine(cuisine) {\n    cuisine = cuisine.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n    } else if (!cuisine) {\n      this.currentUrl = this.currentUrl.replace(/&cuisineType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&cuisineType=${cuisine}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDishType(dishType) {\n    dishType = dishType.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/dishType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n    } else if (!dishType) {\n      this.currentUrl = this.currentUrl.replace(/&dishType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&dishType=${dishType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getMealType(mealType) {\n    mealType = mealType.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/mealType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n    } else if (!mealType) {\n      this.currentUrl = this.currentUrl.replace(/&mealType=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&mealType=${mealType}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getDiet(diet) {\n    diet = diet.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/diet=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n    } else if (!diet) {\n      this.currentUrl = this.currentUrl.replace(/&diet=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&diet=${diet}`;\n    }\n\n    return this.currentUrl;\n  }\n\n  getHealth(health) {\n    health = health.toLowerCase().replace(' ', '-');\n\n    if (this.currentUrl.match(/health=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n    } else if (!health) {\n      this.currentUrl = this.currentUrl.replace(/&health=([^&]*)/, '');\n    } else {\n      this.currentUrl += `&health=${health}`;\n    }\n\n    return this.currentUrl;\n  }\n\n}\n\nexport default new DataServiceAppend();","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js"],"names":["dishType","health","baseUrl","process","env","REACT_APP_URL","DataServiceAppend","currentUrl","getFood","food","toLowerCase","replace","match","console","log","getCuisine","cuisine","getDishType","getMealType","mealType","getDiet","diet","getHealth"],"mappings":"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","sourcesContent":["import { dishType, health } from \"../components/options\";\n\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n    currentUrl = baseUrl;\n    \n    getFood(food) {\n        food = food.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/q=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n        } else if (!food) {\n            this.currentUrl = this.currentUrl.replace(/&q=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&q=${food}`;\n        }\n        console.log(this.currentUrl);\n        return this.currentUrl;\n    }\n\n    getCuisine(cuisine) {\n        cuisine = cuisine.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n        } else if (!cuisine) {\n            this.currentUrl = this.currentUrl.replace(/&cuisineType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&cuisineType=${cuisine}`;\n        }\n        return this.currentUrl;\n    }\n    \n    getDishType(dishType) {\n        dishType = dishType.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/dishType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n        } else if (!dishType) {\n            this.currentUrl = this.currentUrl.replace(/&dishType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&dishType=${dishType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getMealType(mealType) {\n        mealType = mealType.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/mealType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${mealType}`);\n        } else if (!mealType) {\n            this.currentUrl = this.currentUrl.replace(/&mealType=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&mealType=${mealType}`;\n        }\n        return this.currentUrl;\n    }\n\n    getDiet(diet) {\n        diet = diet.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/diet=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/diet=([^&]*)/, `diet=${diet}`);\n        } else if (!diet) {\n            this.currentUrl = this.currentUrl.replace(/&diet=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&diet=${diet}`;\n        }        \n        return this.currentUrl;\n    }\n\n    getHealth(health) {\n        health = health.toLowerCase().replace(' ', '-')\n        if (this.currentUrl.match(/health=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/health=([^&]*)/, `health=${health}`);\n        } else if (!health) {\n            this.currentUrl = this.currentUrl.replace(/&health=([^&]*)/, '');\n        } else {\n            this.currentUrl += `&health=${health}`;\n        }        \n        return this.currentUrl;\n    }\n}\n\nexport default new DataServiceAppend();"]},"metadata":{},"sourceType":"module"}