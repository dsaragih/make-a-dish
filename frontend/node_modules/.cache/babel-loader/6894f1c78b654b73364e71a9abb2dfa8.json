{"ast":null,"code":"import fetchData from \"../http-common\";\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n  constructor() {\n    this.currentUrl = baseUrl;\n  }\n\n  getFood(food) {\n    if (this.currentUrl.match(/q=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n    } else {\n      this.currentUrl += `&q=${food}`;\n    }\n\n    console.log(this.currentUrl);\n    return fetchData(this.currentUrl);\n  }\n\n  getCuisine(cuisine) {\n    if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n    } else {\n      this.currentUrl += `&cuisineType=${cuisine}`;\n    }\n\n    return fetchData(this.currentUrl);\n  }\n\n  getDishType(dishType) {\n    if (this.currentUrl.match(/dishType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n    } else {\n      this.currentUrl += `&dishType=${dishType}`;\n    }\n\n    return fetchData(this.currentUrl);\n  }\n\n  getMealType(mealType) {\n    if (this.currentUrl.match(/mealType=([^&]*)/)) {\n      this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${food}`);\n    } else {\n      this.currentUrl += `&mealType=${food}`;\n    }\n\n    return fetchData(this.currentUrl);\n  }\n\n  getDiet(diet) {\n    this.currentUrl += `&diet=${diet}`;\n    return fetchData(this.currentUrl);\n  }\n\n  getHealth(health) {\n    this.currentUrl += `&health=${health}`;\n    return fetchData(this.currentUrl);\n  }\n\n}\n\nexport default new DataServiceAppend();","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/services/recipes.js"],"names":["fetchData","baseUrl","process","env","REACT_APP_URL","DataServiceAppend","currentUrl","getFood","food","match","replace","console","log","getCuisine","cuisine","getDishType","dishType","getMealType","mealType","getDiet","diet","getHealth","health"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,aAA5B;;AAEA,MAAMC,iBAAN,CAAwB;AAAA;AAAA,SACpBC,UADoB,GACPL,OADO;AAAA;;AAGpBM,EAAAA,OAAO,CAACC,IAAD,EAAO;AAEV,QAAI,KAAKF,UAAL,CAAgBG,KAAhB,CAAsB,WAAtB,CAAJ,EAAwC;AACpC,WAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,OAAhB,CAAwB,WAAxB,EAAsC,KAAIF,IAAK,EAA/C,CAAlB;AACH,KAFD,MAEO;AACH,WAAKF,UAAL,IAAoB,MAAKE,IAAK,EAA9B;AACH;;AACDG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,UAAjB;AACA,WAAON,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAEDO,EAAAA,UAAU,CAACC,OAAD,EAAU;AAChB,QAAI,KAAKR,UAAL,CAAgBG,KAAhB,CAAsB,qBAAtB,CAAJ,EAAkD;AAC9C,WAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,OAAhB,CAAwB,qBAAxB,EAAgD,eAAcI,OAAQ,EAAtE,CAAlB;AACH,KAFD,MAEO;AACH,WAAKR,UAAL,IAAoB,gBAAeQ,OAAQ,EAA3C;AACH;;AACD,WAAOd,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAEDS,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,QAAI,KAAKV,UAAL,CAAgBG,KAAhB,CAAsB,kBAAtB,CAAJ,EAA+C;AAC3C,WAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,OAAhB,CAAwB,kBAAxB,EAA6C,YAAWM,QAAS,EAAjE,CAAlB;AACH,KAFD,MAEO;AACH,WAAKV,UAAL,IAAoB,aAAYU,QAAS,EAAzC;AACH;;AACD,WAAOhB,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAEDW,EAAAA,WAAW,CAACC,QAAD,EAAW;AAClB,QAAI,KAAKZ,UAAL,CAAgBG,KAAhB,CAAsB,kBAAtB,CAAJ,EAA+C;AAC3C,WAAKH,UAAL,GAAkB,KAAKA,UAAL,CAAgBI,OAAhB,CAAwB,kBAAxB,EAA6C,YAAWF,IAAK,EAA7D,CAAlB;AACH,KAFD,MAEO;AACH,WAAKF,UAAL,IAAoB,aAAYE,IAAK,EAArC;AACH;;AACD,WAAOR,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAEDa,EAAAA,OAAO,CAACC,IAAD,EAAO;AACV,SAAKd,UAAL,IAAoB,SAAQc,IAAK,EAAjC;AACA,WAAOpB,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAEDe,EAAAA,SAAS,CAACC,MAAD,EAAS;AACd,SAAKhB,UAAL,IAAoB,WAAUgB,MAAO,EAArC;AACA,WAAOtB,SAAS,CAAC,KAAKM,UAAN,CAAhB;AACH;;AAjDmB;;AAoDxB,eAAe,IAAID,iBAAJ,EAAf","sourcesContent":["import fetchData from \"../http-common\";\n\nconst baseUrl = process.env.REACT_APP_URL;\n\nclass DataServiceAppend {\n    currentUrl = baseUrl;\n    \n    getFood(food) {\n\n        if (this.currentUrl.match(/q=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/q=([^&]*)/, `q=${food}`);\n        } else {\n            this.currentUrl += `&q=${food}`;\n        }\n        console.log(this.currentUrl);\n        return fetchData(this.currentUrl);\n    }\n\n    getCuisine(cuisine) {\n        if (this.currentUrl.match(/cuisineType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/cuisineType=([^&]*)/, `cuisineType=${cuisine}`);\n        } else {\n            this.currentUrl += `&cuisineType=${cuisine}`;\n        }\n        return fetchData(this.currentUrl);\n    }\n    \n    getDishType(dishType) {\n        if (this.currentUrl.match(/dishType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/dishType=([^&]*)/, `dishType=${dishType}`);\n        } else {\n            this.currentUrl += `&dishType=${dishType}`;\n        }\n        return fetchData(this.currentUrl);\n    }\n\n    getMealType(mealType) {\n        if (this.currentUrl.match(/mealType=([^&]*)/)) {\n            this.currentUrl = this.currentUrl.replace(/mealType=([^&]*)/, `mealType=${food}`);\n        } else {\n            this.currentUrl += `&mealType=${food}`;\n        }\n        return fetchData(this.currentUrl);\n    }\n\n    getDiet(diet) {\n        this.currentUrl += `&diet=${diet}`;\n        return fetchData(this.currentUrl);\n    }\n\n    getHealth(health) {\n        this.currentUrl += `&health=${health}`;\n        return fetchData(this.currentUrl);\n    }\n}\n\nexport default new DataServiceAppend();"]},"metadata":{},"sourceType":"module"}