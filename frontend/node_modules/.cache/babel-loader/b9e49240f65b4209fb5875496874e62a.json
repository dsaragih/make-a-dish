{"ast":null,"code":"var _jsxFileName = \"/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Recipe(props) {\n  _s();\n\n  const [recipe, setRecipe] = useState([]);\n  const url = `https://api.edamam.com/api/recipes/v2/${props.match.params.id}?type=public&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`;\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const response = await axios.get(url);\n        const data = await response.data;\n        console.log(data);\n        setRecipe(data['recipe']);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    ;\n    fetchData();\n  }, []);\n  console.log(recipe);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: recipe['image'],\n      className: \"img-fluid mx-auto d-block\",\n      alt: `Image of ${recipe['label']}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Source: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 7\n        }, this), recipe['source'], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Calories (kcal): \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 7\n        }, this), Math.floor(recipe['calories']), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dish Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }, this), recipe['dishType'].join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Diet Labels: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), recipe['dietLabels'].join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 70\n        }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Meal Type: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this), recipe['mealType'].join(', '), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 66\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Ingredients: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipe['ingredientLines'].map((ingredient, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: ingredient\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Health Labels: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipe['healthLabels'].map((label, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: label\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), JSON.stringify(recipe)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Recipe, \"NiGEro/KvkAMuYeTrdy4dlbXQM0=\");\n\n_c = Recipe;\nexport default Recipe;\n\nvar _c;\n\n$RefreshReg$(_c, \"Recipe\");","map":{"version":3,"sources":["/Users/HARRY2/Documents/projects/make-a-dish/frontend/src/components/recipe.js"],"names":["axios","React","useEffect","useState","Recipe","props","recipe","setRecipe","url","match","params","id","process","env","REACT_APP_API_ID","REACT_APP_API_KEY","fetchData","response","get","data","console","log","e","error","Math","floor","join","map","ingredient","i","label","JSON","stringify"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\n\nfunction Recipe(props) {\n\n  const [recipe, setRecipe] = useState([]);\n\n  const url = `https://api.edamam.com/api/recipes/v2/${props.match.params.id}?type=public&app_id=${process.env.REACT_APP_API_ID}&app_key=${process.env.REACT_APP_API_KEY}`;\n  useEffect(() => {\n    async function fetchData() {\n      try {\n          const response = await axios.get(url);\n          const data = await response.data;\n          console.log(data)\n          setRecipe(data['recipe']);\n      } catch (e) {\n          console.error(e);\n      }\n    };\n    fetchData();\n\n  }, []);\n  console.log(recipe)\n  return (\n    <div className=\"App\">\n      <img src={recipe['image']} className=\"img-fluid mx-auto d-block\" alt={`Image of ${recipe['label']}`}/>\n      <div className=\"mt-3\">\n        <div className=\"row\">\n          <div className=\"col\">\n            \n          </div>\n      <strong>Source: </strong>{recipe['source']}<br/>\n      <strong>Calories (kcal): </strong>{Math.floor(recipe['calories'])}<br/>\n      <strong>Dish Type: </strong>{recipe['dishType'].join(', ')}<br/>\n      <strong>Diet Labels: </strong>{recipe['dietLabels'].join(', ')}<br/>\n      <strong>Meal Type: </strong>{recipe['mealType'].join(', ')}<br/>\n          <div className=\"col\"></div>\n          <div className=\"col\"></div>\n        </div>\n      <strong>Ingredients: </strong><br/>\n      <ul>\n        {recipe['ingredientLines'].map((ingredient, i) => {\n          return (\n            <li key={i}>\n              {ingredient}\n            </li>\n          )\n        })}\n      </ul>\n      <strong>Health Labels: </strong><br/>\n      <ul>\n        {recipe['healthLabels'].map((label, i) => {\n          return (\n            <li key={i}>\n              {label}\n            </li>\n          )\n        })}\n      </ul>\n      </div>\n      {JSON.stringify(recipe)}\n    </div>\n  );\n}\n\nexport default Recipe;"]},"metadata":{},"sourceType":"module"}